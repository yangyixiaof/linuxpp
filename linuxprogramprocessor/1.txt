 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 List<PatternBinding>=new#ArrayList<PatternBinding>()#5#15 Handler<FullHttpResponse,RoutedHttpRequest>#15 Handler<Void,RoutedHttpResponse>#15 NamedPattern#15 Handler<FullHttpResponse,RoutedHttpRequest>#15 Set<String>#15 channelRead0##40 ChannelHandlerContext#33 FullHttpRequest#33 serveRequest($C0?0,$C0?0)#16 getBindingsForRequest##40 FullHttpRequest#33 HttpMethod=$C0?0.getMethod()#16#32 if#12 $C0?0.equals(HttpMethod.GET)#16 return#$F0?8#19 else#13 if#12 $C0?0.equals(HttpMethod.PUT)#16 return#$F0?7#19 else#13 if#12 $C0?0.equals(HttpMethod.POST)#16 return#$F0?6#19 else#13 if#12 $C0?0.equals(HttpMethod.DELETE)#16 return#$F0?5#19 else#13 if#12 $C0?0.equals(HttpMethod.OPTIONS)#16 return#$F0?4#19 else#13 if#12 $C0?0.equals(HttpMethod.HEAD)#16 return#$F0?3#19 else#13 if#12 $C0?0.equals(HttpMethod.TRACE)#16 return#$F0?2#19 else#13 if#12 $C0?0.equals(HttpMethod.PATCH)#16 return#$F0?0#19 else#13 if#12 $C0?0.equals(HttpMethod.CONNECT)#16 return#$F0?1#19 return#@NUL#19 serveRequest##40 ChannelHandlerContext#33 FullHttpRequest#33 if#12 !$C0?0.getDecoderResult()#16#21 .isSuccess()#16 sendHttpResponse($C0?0,$C0?0,@HO)#16 new#DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.BAD_REQUEST)#5 return#false#19 return#route($C0?0,$C0?0,@HO)#16#19 getBindingsForRequest($C0?0)#16 get##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?8)#16 return#this#19 put##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?7)#16 return#this#19 post##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?6)#16 return#this#19 delete##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?5)#16 return#this#19 options##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?4)#16 return#this#19 head##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?3)#16 return#this#19 trace##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?2)#16 return#this#19 connect##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?1)#16 return#this#19 patch##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?0)#16 return#this#19 all##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addPattern($C0?0,$C0?0,$F0?8)#16 addPattern($C0?0,$C0?0,$F0?7)#16 addPattern($C0?0,$C0?0,$F0?6)#16 addPattern($C0?0,$C0?0,$F0?5)#16 addPattern($C0?0,$C0?0,$F0?4)#16 addPattern($C0?0,$C0?0,$F0?3)#16 addPattern($C0?0,$C0?0,$F0?2)#16 addPattern($C0?0,$C0?0,$F0?1)#16 addPattern($C0?0,$C0?0,$F0?0)#16 return#this#19 getWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?8)#16 return#this#19 putWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?7)#16 return#this#19 postWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?6)#16 return#this#19 deleteWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?5)#16 return#this#19 optionsWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?4)#16 return#this#19 headWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?3)#16 return#this#19 traceWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?2)#16 return#this#19 connectWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?1)#16 return#this#19 patchWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?0)#16 return#this#19 allWithRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 addRegEx($C0?0,$C0?0,$F0?8)#16 addRegEx($C0?0,$C0?0,$F0?7)#16 addRegEx($C0?0,$C0?0,$F0?6)#16 addRegEx($C0?0,$C0?0,$F0?5)#16 addRegEx($C0?0,$C0?0,$F0?4)#16 addRegEx($C0?0,$C0?0,$F0?3)#16 addRegEx($C0?0,$C0?0,$F0?2)#16 addRegEx($C0?0,$C0?0,$F0?1)#16 addRegEx($C0?0,$C0?0,$F0?0)#16 return#this#19 noMatch##40 Handler<FullHttpResponse,RoutedHttpRequest>#33 $F0?1=$C0?0#3 return#this#19 everyMatch##40 Handler<Void,RoutedHttpResponse>#33 $F0?0=$C0?0#3 return#this#19 addPattern##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 List<PatternBinding>#33 Matcher=@HO#32 Pattern.compile(@STR)#16 .matcher($C0?0)#16 StringBuffer=new#StringBuffer()#5#32 Set<String>=new#HashSet<String>()#5#32 while#$C0?0.find()#16#8 String=@HO#32 $C0?0.group()#16 .substring(@NUB)#16 if#12 $C0?0.contains($C0?0)#16 throw#new#IllegalArgumentException(@HO)#5#30 @STR+$C0?0#6 +@STR#6 $C0?0.appendReplacement($C0?0,@STR)#16 $C0?0.add($C0?0)#16 $C0?0.appendTail($C0?0)#16 String=$C0?0.toString()#16#32 PatternBinding=new#PatternBinding(@HO,$C0?0,$C0?0)#5#32 NamedPattern.compile($C0?0)#16 $C0?0.add($C0?0)#16 addRegEx##40 String#33 Handler<FullHttpResponse,RoutedHttpRequest>#33 List<PatternBinding>#33 PatternBinding=new#PatternBinding(@HO,@NUL,$C0?0)#5#32 NamedPattern.compile($C0?0)#16 $C0?0.add($C0?0)#16 getResponse##40 ChannelHandlerContext#33 FullHttpRequest#33 FullHttpResponse=@NUL#32 if#12 !$C0?0.getDecoderResult()#16#21 .isSuccess()#16 $C0?0=new#DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.BAD_REQUEST)#5#3 sendHttpResponse($C0?0,$C0?0,$C0?0)#16 else#13 $C0?0=getResponseForRoute($C0?0,$C0?0,@HO)#16#3 getBindingsForRequest($C0?0)#16 return#$C0?0#19 getResponseForRoute##40 ChannelHandlerContext#33 FullHttpRequest#33 List<PatternBinding>#33 RoutedHttpRequest=new#RoutedHttpRequest($C0?0,$C0?0)#5#32 for#PatternBinding:$C0?0#10 QueryStringDecoder=new#QueryStringDecoder(@HO)#5#32 $C0?0.getUri()#16 NamedMatcher=@HO#32 $C0?0.pattern.matcher(@HO)#16 $C0?0.path()#16 if#12 $C0?0.matches()#16 Map<String,List<String>>=new#HashMap<String,List<String>>(@HO)#5#32 $C0?0.groupCount()#16 if#12 $C0?0.paramNames!=@NUL#6 for#String:$C0?0.paramNames#10 List<String>=new#ArrayList<String>()#5#32 $C0?0.add(@HO)#16 $C0?0.group($C0?0)#16 $C0?0.put($C0?0,$C0?0)#16 else#13 for#11 int=@NUB#34 $C0?0<$C0?0.groupCount()#16#6 $C0?0++#20 List<String>=new#ArrayList<String>()#5#32 $C0?0.add(@HO)#16 $C0?0.group(@HO)#16 $C0?0+@NUB#6 $C0?0.put(@HO,$C0?0)#16 @STR+$C0?0#6 $C0?0.parameters()#16 .putAll($C0?0)#16 FullHttpResponse=$C0?0.handler.handle($C0?0)#16#32 return#$C0?0#19 if#12 $F0?1!=@NUL#6 return#$F0?1.handle($C0?0)#16#19 return#new#DefaultFullHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.NOT_FOUND)#5#19 route##40 ChannelHandlerContext#33 FullHttpRequest#33 List<PatternBinding>#33 FullHttpResponse=getResponseForRoute($C0?0,$C0?0,$C0?0)#16#32 sendHttpResponse($C0?0,$C0?0,$C0?0)#16 if#12 $F0?0!=@NUL#6 $F0?0.handle(@HO)#16 new#RoutedHttpResponse($C0?0,$C0?0)#5 return#$F0?1!=@NUL#6#19 sendHttpResponse##40 ChannelHandlerContext#33 FullHttpRequest#33 FullHttpResponse#33 if#12 $C0?0==@NUL#6 return##19 ChannelFuture=@HO#32 $C0?0.channel()#16 .writeAndFlush($C0?0)#16 if#12 !HttpHeaders.isKeepAlive($C0?0)#21 ||$C0?0.getStatus()#16#6 .code()#16 !=@NUB#6 $C0?0.addListener(ChannelFutureListener.CLOSE)#16
 1 0 1 200
 :([A-Za-z][A-Za-z0-9_]*) Cannot use identifier more than once in pattern string (?<$1>[^\\/]+) param
